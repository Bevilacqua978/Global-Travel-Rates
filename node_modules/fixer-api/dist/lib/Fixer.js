'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var moment = require("moment");
var Fixer = (function () {
    function Fixer(opts) {
        if (opts === void 0) { opts = {}; }
        Object.assign(this, {
            baseUrl: opts.baseUrl || 'http://data.fixer.io/api'
        });
    }
    Fixer.prototype.forDate = function (date, opts) {
        if (opts === void 0) { opts = {}; }
        var formattedDate;
        var RE_DATE = /^\d{4}-\d{2}-\d{2}$/;
        if (typeof date === 'string' && RE_DATE.test(date)) {
            formattedDate = date;
        }
        else if (date instanceof Date) {
            formattedDate = moment(date).format('YYYY-MM-DD');
        }
        else {
            throw new Error('Invalid date argument');
        }
        return this.request("/" + formattedDate, this.filterOptions(opts));
    };
    Fixer.prototype.latest = function (opts) {
        if (opts === void 0) { opts = {}; }
        return this.request('/latest', this.filterOptions(opts));
    };
    Fixer.prototype.filterOptions = function (opts) {
        var filteredOpts = {};
        if (opts.base) {
            filteredOpts.base = opts.base;
        }
        if (opts.symbols) {
            filteredOpts.symbols = opts.symbols;
        }
        if (opts.access_key) {
            filteredOpts.access_key = opts.access_key;
        }
        return filteredOpts;
    };
    return Fixer;
}());
exports.Fixer = Fixer;
